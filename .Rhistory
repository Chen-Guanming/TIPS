s
s200=pi*1.75*1.75
s1000=pi*3.75*3.75
s1000
200/s200
1000/s1000
200/s200
200/s200*10000
200/s200*10000/2
1000/s1000
1000/s1000/2
2^21
2^21
2^32
2^22
2^23 -1
a = c(204806,184242,163679,	143115,	122915,	106383,	89851,73320,56757)
a
a1=c(1,a)
a2=c(a,0)
a1=c(0,a)
a2-a1
a1-a2
a = c(204806,184242,163679,	143115,	122915,	106383,	89851,73320,56757,40000)
a1=c(0,a)
a2=c(a,0)
a2-a1
a1-a2
shiny::runApp('D:/others/qPCR')
nx = 100
ny = 80
x = sample(x = 1:nx, size = 90, replace = TRUE)
y = seq(-1, -ny, length = 90)
op = par(bg = "black", mar = c(0, 0.2, 0, 0.2))
plot(1:nx, seq(-1, -nx), type = "n", xlim = c(1, nx), ylim = c(-ny+10, 1))
for (i in seq_along(x))
{
aux = sample(1:ny, 1)
points(rep(x[i], aux), y[1:aux], pch = sample(letters, aux, replace = TRUE),
col = hsv(0.35, 1, 1, runif(aux, 0.3)), cex = runif(aux, 0.3))
}
data(mtcars)
mtcars
View(mtcars)
View(mtcars)
View(mtcars)
sqrt(5/3/pi)
sqrt(5/3/pi)*2
sqrt(1/pi)*2
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RNAseq123", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RNAseq123", version = "3.8")
shiny::runApp('D:/work/qPCR/webqPCR')
cbind(1:5,2:6)
runApp('D:/work/qPCR/webqPCR')
?lm.fit
topTable
.topTableT
runApp('D:/work/qPCR/webqPCR')
shiny::runApp('D:/work/qPCR/webqPCR')
0.75*0.75*pi
50/1.767146
1/1.767146
50/1.767146
1.5*1.5/0.81
1.5*1.5/0.81*0.92
2.25/0.81
1.5*1.5/0.81*0.92
5/(1.5*1.5/0.81*0.92)
5/(1.5*1.5/0.81*0.92)*17810
50/(1.5*1.5/0.81*10.26)*166400
3532839000 / 23552260
15689/0.6976
13463/0.5987
15679/ 22487
15679/0.2864
install.packages('BRugs')
2^16
shiny::runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
install.packages('ggthemes')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
install.packages('ggvis')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
install.packages('NMF')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
sessionInfo()
source('D:/中心资料/2019考评/code/test.R', encoding = 'UTF-8')
shiny::runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
sessionInfo()
23-9
38-24
51-37
54-39
shiny::runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rnaseqGene", version = "3.8")
install.packages('apeglm')
BiocManager::install("rnaseqGene", version = "3.8")
BiocManager::install("rnaseqGene", version = "3.8")
installed.packages('apeglm')
install.packages('apeglm')
BiocManager::install("apeglm", version = "3.8")
BiocManager::install("rnaseqGene", version = "3.8")
output$ui_gen_parm <- renderUI({ div(textInput(inputId='parm_name', label='物料名称:'),
textInput(inputId='parm_des1', label='规格型号:'),
textInput(inputId='parm_des2', label='图号/文件号:'),
textInput(inputId='parm_des3', label='生产厂家:'),
textInput(inputId='parm_des4', label='供应商:'))
)))
ui_gen_parm <- renderUI({ div(textInput(inputId='parm_name', label='物料名称:'),
textInput(inputId='parm_des1', label='规格型号:'),
textInput(inputId='parm_des2', label='图号/文件号:'),
textInput(inputId='parm_des3', label='生产厂家:'),
textInput(inputId='parm_des4', label='供应商:'))})
library(shiny)
ui_gen_parm <- renderUI({ div(textInput(inputId='parm_name', label='物料名称:'),
textInput(inputId='parm_des1', label='规格型号:'),
textInput(inputId='parm_des2', label='图号/文件号:'),
textInput(inputId='parm_des3', label='生产厂家:'),
textInput(inputId='parm_des4', label='供应商:'))})
uiOutput(ui_gen_parm)$value
uiOutput(ui_gen_parm)
runApp('D:/work/shiny/STARTapp-master/STARTapp-master')
runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/qPCR')
?as.POSIXct
p <- ggplot(mtcars, aes(x=cyl, y=mpg)) +
geom_point()
library(ggplot2)
p <- ggplot(mtcars, aes(x=cyl, y=mpg)) +
geom_point()
p
p <- ggplot(mtcars, aes(cyl, mpg)) +
geom_point()
p
p <- ggplot(mtcars, aes(cyl, mpg)) + geom_point()
p
if (!require(remotes)) install.packages("remotes")
remotes::install_github("shians/CellBench", ref = "R-3.5", build_opts = c("--no-resave-data", "--no-manual"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("CellBench")
BiocManager::install("CellBench")
install.packages('pdflatex')
BiocManager::install("CellBench")
install.packages("CellBench")
install.packages("C:/Users/Administrator/Desktop/CellBench_1.0.0.zip", repos = NULL, type = "win.binary")
shiny::runApp('D:/work/qPCR/webqPCR')
?numericInput
runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/webqPCR')
library(debrowser)
startDEBrowser()
runApp('D:/codestudy/shiny/debrowser-master/debrowser-master/R')
runApp('D:/codestudy/shiny/debrowser-master/debrowser-master/R')
runApp('D:/work/qPCR/webqPCR')
library(debrowser)
startDEBrowser()
startHeatmap()
?roxygen2
source('D:/codestudy/shiny/debrowser-master/debrowser-master/tests/test-demo.R')
install.packages('testthat')
source('D:/codestudy/shiny/debrowser-master/debrowser-master/tests/test-demo.R')
?tryCatch
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
tryCatch(stop(tt), error = function(e) e, finally = print("Hello"))
tt = 1
tryCatch(stop(tt), error = function(e) e, finally = print("Hello"))
tryCatch(tt, error = function(e) e, finally = print("Hello"))
shiny::runApp('D:/work/code/TCRShiny')
runApp('D:/work/code/TCRShiny')
runApp('D:/work/code/TCRShiny')
?fileInput
runApp('D:/work/code/TCRShiny')
？withProgress
?withProgress
library(shiny)
?withProgress
shiny::runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/webqPCR')
shiny::runApp('D:/work/qPCR/webqPCR')
devtools::install_local("path/to/your/folder/with/immunarch.tar.gz", dependencies=T)
install.packages("C:/Users/Administrator/Desktop/immunarch.tar.gz", repos = NULL, type = "source")
library('immunarch')
AA_PROP
tt =
AA_PROP
tt <- AA_PROP()
data(immdata)
gu = geneUsage(immdata$data)
p = vis(gu)
fixVis(p)
109*4*0.6
library(gcookbook)
library(ggplot2)
head(heightweight)
ggplot(data.frame(x=1:10,y=1:10),aes(x=x, y=y)) + geom_point(size=3,shape=21)
p = ggplot(data.frame(x=1:10,y=1:10),aes(x=x, y=y)) + geom_point(size=3,shape=21)
library('immunarch')
fixVis(p)
fixVis
std(1:10)
sd(1:10)
?sd
sd(c(1,1,1))
runApp('D:/work/qPCR/qPCR')
runApp('D:/work/qPCR/qPCR')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAWorkflow")
install.packages('devtools')
shiny::runApp('D:/codestudy/shiny/test01/test01')
runApp('D:/codestudy/shiny/test01/test01')
library(immunarch)
repLoad
runApp('D:/codestudy/shiny/test01/test01')
runApp('D:/work/code/TCRShiny')
library('RNAseq123')
shiny::runApp('D:/work/code/TCRShiny')
library(scImpute)
scimpute
c(380,520) * 2
c(380,520) * 3
464.5*5
464.5/5
464.5/5 * 3
279
464.5 /5 *3
231.5 /5 *3
464.5 /5
140/384
qc_aggregate
library(fastqcr)
qc_aggregate
kable
40*96/3
48*8
40*96
40*96/3
install.packages('RCircos')
library(RCircos)
demo()
RCircos.Area.Plot.Demo()
RCircos.Area.Plot.Demo
library(RCircos);
data(UCSC.HG19.Human.CytoBandIdeogram);
data(RCircos.Polygon.Data);
RCircos.Set.Core.Components(
cyto.info=UCSC.HG19.Human.CytoBandIdeogram,
chr.exclude=NULL, tracks.inside=10, tracks.outside=5)
RCircos.Set.Plot.Area();
RCircos.Chromosome.Ideogram.Plot()
load("RCircos/data/RCircos.Histogram.Data.RData")
area.data <- RCircos.Histogram.Data;
adj.value <- runif(nrow(area.data), 0, 0.4)
area.data["DataT"] <- 0.5 + adj.value
area.data["DataB"] <- 0.5 - adj.value
RCircos.Area.Plot(area.data, data.col=4, plot.type="mountain",
inside.pos=1.2, outside.pos=1.5, is.sorted=FALSE)
RCircos.Area.Plot(area.data, data.col=4, plot.type="curtain",
inside.pos=0.9, outside.pos=1.1, is.sorted=FALSE)
RCircos.Area.Plot(area.data, data.col=c(5,6), plot.type="band",
inside.pos=0.4, outside.pos=0.7, is.sorted=FALSE)
0.66*384
4*384
2.16/5
2.16/5*384
2.2/5*384
0.7*384
2.2/4
3*384
o.79*384
0.79*384
3840/4
3840/3
30*384
384/48
9*394
0.79*384
3840/5
768+76.8
(768+76.8)/384
20*384
shiny::runApp('D:/codestudy/shiny/imputation/Rimpute20170109')
install.packages('dtangle')
library('dtangle')
names(shen_orr_ex)
data(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
head(shen_orr_ex$data)
dim(shen_orr_ex$data)
dim(shen_orr_ex$data[[1]])
shen_orr_ex$annotation$mixture
dim(shen_orr_ex$data$log)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
library('dtangle')
data = shen_orr_ex$data$log
mixture_proportions = shen_orr_ex$annotation$mixture
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle(Y=data, pure_samples = pure_samples)
matplot(mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
View(mixture_proportions)
dt_out$estimates
?matplot
## ------------------------------------------------------------------------
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = dtangle(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
mixture_mixture_proportions = mixture_proportions[-(1:9),]
matplot(mixture_mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
## ------------------------------------------------------------------------
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
View(ref_reduced)
View(mixture_samples)
View(ref_reduced)
## ------------------------------------------------------------------------
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = dtangle(Y=mixture_samples, reference=ref_reduced)
matplot(mixture_mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
## ------------------------------------------------------------------------
dt_out = dtangle(Y=mixture_samples, references = ref_reduced,marker_method = "diff")
## ------------------------------------------------------------------------
dt_out$n_markers
## ------------------------------------------------------------------------
dt_out = dtangle(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(100,150,50))
dt_out$n_markers
mrkrs = find_markers(Y=mixture_samples, references = ref_reduced)
library(shiny)
?selectInput
BiocManager::install('SingleCellExperiment')
BiocManager::install('SingleCellExperiment')
BiocManager::install('SingleCellExperiment')
BiocManager::install(c('scater', 'scran', 'uwot'))
library(SingleCellExperiment)
rpois(10, 10)
?rpois
counts_matrix <- data.frame(cell_1 = rpois(10, 10),
cell_2 = rpois(10, 10),
cell_3 = rpois(10, 30))
View(counts_matrix)
rownames(counts_matrix) <- paste0("gene_", 1:10)
counts_matrix <- as.matrix(counts_matrix)
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
sce
assay(sce, "counts")
a1 <- assay(sce, "counts")
assays(sce)
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sce
logcounts(sce)
counts_100 <- assay(sce, "counts") + 100
assay(sce, "counts_100") <- counts_100
assay(sce)
assays(sce)
counts_100(sce)
assay(sce,'count_100')
assay(sce,'counts_100')
install.packages("devtools")
library(devtools)
install_github("Vivianstats/scImpute")
shiny::runApp('D:/work/qPCR/webqPCR')
library(SingleCellExperiment)
library(scater)
library(scran)
library(uwot)
library(Rtsne)
10^-1.74
10^-1
source("http://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")
biocLite("qusage")
biocLite("Seurat")
BiocManager::install("Seurat")
shiny::runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
package.version()
package.version("Seurat")
package.version("monocle")
library(shiny)
?plotOutput
?box
box
?box
?shiny::box
?renderPlot
?renderPlot
?plotOutput
?pdf
library(Seurat)
?DimPlot
?grDevices
library(grDevices)
?pdf
?savePlot
?downloadHandler
shiny::runApp('D:/work/Zihan/web/web')
?write.csv
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
?renderPlot
runApp('D:/work/Zihan/web/web')
library("Seurat", lib.loc="~/R/win-library/3.5")
remove.packages("monocle", lib="~/R/win-library/3.5")
remove.packages("Seurat", lib="~/R/win-library/3.5")
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
install.packages('mixtools')
install.packages(c( 'lars', 'dtw', 'doSNOW', 'hdf5r' ))
install.packages(c( 'lars'))
library(BiocInstaller)
BiocManager::install('lars')
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
library("monocle")
shiny::runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
24*48
24*24
1.79/12
1.79/1.2
1.5*17
1.5*17 +4.61
120 + 4*36
12 + 1 + 8 + 25+12 + 1+18 + 12  +  18 * 4
12 + 1 + 8 + 25+12 + 1+36 + 24  +  36 * 4
shiny::runApp('D:/work/Zihan/web/web')
24*24
96*6
12+1+8+30+8+1+15+18+12+1
1340+1250+670+1470+1400+450+1400+450
library(ShortRead)
shiny::runApp('E:/硬件相关/A01事务管理/物料整理/idgen')
5315 + 2500 + 2190
10005 * 0.015
10005 * 0.02
5315*0.015
5315*0.015 *3
getwd()
aa <- read.table('mouse_genome.txt',header = T,sep='\t',stringsAsFactors = F)
?read.csv
aa <- read.delim('mouse_genome.txt',header = T,stringsAsFactors = F)
aa <- read.delim('mouse_genome.txt',header = F,stringsAsFactors = F)
aa <- read.delim('mouse_genome1.txt',header = F,stringsAsFactors = F)
install.packages('treemaps')
getwd()
?read.csv
a <- read.delim('read.delim')
a <- read.delim('hESC.txt')
shiny::runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
a = matrix(1:12,3,4)
a
log(a+1)
runApp('D:/work/Zihan/web/web')
source('D:/work/Zihan/web/web/base/data.R')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
library("shiny")
?withProgress
shiny::runApp('D:/work/Zihan/web/web')
load('tt.RData')
setwd("D:/work/Zihan/web/web")
load('tt.RData')
aa <- pData(sc.data)
runApp()
aa <- pData(sdata)
method('seurat')
showMethods('seurat')
aa <- sdata@meta.data
runApp()
runApp()
runApp()
