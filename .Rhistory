startDEBrowser()
runApp('D:/codestudy/shiny/debrowser-master/debrowser-master/R')
runApp('D:/codestudy/shiny/debrowser-master/debrowser-master/R')
runApp('D:/work/qPCR/webqPCR')
library(debrowser)
startDEBrowser()
startHeatmap()
?roxygen2
source('D:/codestudy/shiny/debrowser-master/debrowser-master/tests/test-demo.R')
install.packages('testthat')
source('D:/codestudy/shiny/debrowser-master/debrowser-master/tests/test-demo.R')
?tryCatch
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
tryCatch(stop(tt), error = function(e) e, finally = print("Hello"))
tt = 1
tryCatch(stop(tt), error = function(e) e, finally = print("Hello"))
tryCatch(tt, error = function(e) e, finally = print("Hello"))
shiny::runApp('D:/work/code/TCRShiny')
runApp('D:/work/code/TCRShiny')
runApp('D:/work/code/TCRShiny')
?fileInput
runApp('D:/work/code/TCRShiny')
？withProgress
?withProgress
library(shiny)
?withProgress
shiny::runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/webqPCR')
runApp('D:/work/qPCR/webqPCR')
shiny::runApp('D:/work/qPCR/webqPCR')
devtools::install_local("path/to/your/folder/with/immunarch.tar.gz", dependencies=T)
install.packages("C:/Users/Administrator/Desktop/immunarch.tar.gz", repos = NULL, type = "source")
library('immunarch')
AA_PROP
tt =
AA_PROP
tt <- AA_PROP()
data(immdata)
gu = geneUsage(immdata$data)
p = vis(gu)
fixVis(p)
109*4*0.6
library(gcookbook)
library(ggplot2)
head(heightweight)
ggplot(data.frame(x=1:10,y=1:10),aes(x=x, y=y)) + geom_point(size=3,shape=21)
p = ggplot(data.frame(x=1:10,y=1:10),aes(x=x, y=y)) + geom_point(size=3,shape=21)
library('immunarch')
fixVis(p)
fixVis
std(1:10)
sd(1:10)
?sd
sd(c(1,1,1))
runApp('D:/work/qPCR/qPCR')
runApp('D:/work/qPCR/qPCR')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAWorkflow")
install.packages('devtools')
shiny::runApp('D:/codestudy/shiny/test01/test01')
runApp('D:/codestudy/shiny/test01/test01')
library(immunarch)
repLoad
runApp('D:/codestudy/shiny/test01/test01')
runApp('D:/work/code/TCRShiny')
library('RNAseq123')
shiny::runApp('D:/work/code/TCRShiny')
library(scImpute)
scimpute
c(380,520) * 2
c(380,520) * 3
464.5*5
464.5/5
464.5/5 * 3
279
464.5 /5 *3
231.5 /5 *3
464.5 /5
140/384
qc_aggregate
library(fastqcr)
qc_aggregate
kable
40*96/3
48*8
40*96
40*96/3
install.packages('RCircos')
library(RCircos)
demo()
RCircos.Area.Plot.Demo()
RCircos.Area.Plot.Demo
library(RCircos);
data(UCSC.HG19.Human.CytoBandIdeogram);
data(RCircos.Polygon.Data);
RCircos.Set.Core.Components(
cyto.info=UCSC.HG19.Human.CytoBandIdeogram,
chr.exclude=NULL, tracks.inside=10, tracks.outside=5)
RCircos.Set.Plot.Area();
RCircos.Chromosome.Ideogram.Plot()
load("RCircos/data/RCircos.Histogram.Data.RData")
area.data <- RCircos.Histogram.Data;
adj.value <- runif(nrow(area.data), 0, 0.4)
area.data["DataT"] <- 0.5 + adj.value
area.data["DataB"] <- 0.5 - adj.value
RCircos.Area.Plot(area.data, data.col=4, plot.type="mountain",
inside.pos=1.2, outside.pos=1.5, is.sorted=FALSE)
RCircos.Area.Plot(area.data, data.col=4, plot.type="curtain",
inside.pos=0.9, outside.pos=1.1, is.sorted=FALSE)
RCircos.Area.Plot(area.data, data.col=c(5,6), plot.type="band",
inside.pos=0.4, outside.pos=0.7, is.sorted=FALSE)
0.66*384
4*384
2.16/5
2.16/5*384
2.2/5*384
0.7*384
2.2/4
3*384
o.79*384
0.79*384
3840/4
3840/3
30*384
384/48
9*394
0.79*384
3840/5
768+76.8
(768+76.8)/384
20*384
shiny::runApp('D:/codestudy/shiny/imputation/Rimpute20170109')
install.packages('dtangle')
library('dtangle')
names(shen_orr_ex)
data(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
head(shen_orr_ex$data)
dim(shen_orr_ex$data)
dim(shen_orr_ex$data[[1]])
shen_orr_ex$annotation$mixture
dim(shen_orr_ex$data$log)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
library('dtangle')
data = shen_orr_ex$data$log
mixture_proportions = shen_orr_ex$annotation$mixture
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle(Y=data, pure_samples = pure_samples)
matplot(mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
View(mixture_proportions)
dt_out$estimates
?matplot
## ------------------------------------------------------------------------
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = dtangle(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
mixture_mixture_proportions = mixture_proportions[-(1:9),]
matplot(mixture_mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
## ------------------------------------------------------------------------
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
View(ref_reduced)
View(mixture_samples)
View(ref_reduced)
## ------------------------------------------------------------------------
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = dtangle(Y=mixture_samples, reference=ref_reduced)
matplot(mixture_mixture_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
## ------------------------------------------------------------------------
dt_out = dtangle(Y=mixture_samples, references = ref_reduced,marker_method = "diff")
## ------------------------------------------------------------------------
dt_out$n_markers
## ------------------------------------------------------------------------
dt_out = dtangle(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(100,150,50))
dt_out$n_markers
mrkrs = find_markers(Y=mixture_samples, references = ref_reduced)
library(shiny)
?selectInput
BiocManager::install('SingleCellExperiment')
BiocManager::install('SingleCellExperiment')
BiocManager::install('SingleCellExperiment')
BiocManager::install(c('scater', 'scran', 'uwot'))
library(SingleCellExperiment)
rpois(10, 10)
?rpois
counts_matrix <- data.frame(cell_1 = rpois(10, 10),
cell_2 = rpois(10, 10),
cell_3 = rpois(10, 30))
View(counts_matrix)
rownames(counts_matrix) <- paste0("gene_", 1:10)
counts_matrix <- as.matrix(counts_matrix)
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
sce
assay(sce, "counts")
a1 <- assay(sce, "counts")
assays(sce)
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sce
logcounts(sce)
counts_100 <- assay(sce, "counts") + 100
assay(sce, "counts_100") <- counts_100
assay(sce)
assays(sce)
counts_100(sce)
assay(sce,'count_100')
assay(sce,'counts_100')
install.packages("devtools")
library(devtools)
install_github("Vivianstats/scImpute")
shiny::runApp('D:/work/qPCR/webqPCR')
library(SingleCellExperiment)
library(scater)
library(scran)
library(uwot)
library(Rtsne)
10^-1.74
10^-1
source("http://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")
biocLite("qusage")
biocLite("Seurat")
BiocManager::install("Seurat")
shiny::runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
package.version()
package.version("Seurat")
package.version("monocle")
library(shiny)
?plotOutput
?box
box
?box
?shiny::box
?renderPlot
?renderPlot
?plotOutput
?pdf
library(Seurat)
?DimPlot
?grDevices
library(grDevices)
?pdf
?savePlot
?downloadHandler
shiny::runApp('D:/work/Zihan/web/web')
?write.csv
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
?renderPlot
runApp('D:/work/Zihan/web/web')
library("Seurat", lib.loc="~/R/win-library/3.5")
remove.packages("monocle", lib="~/R/win-library/3.5")
remove.packages("Seurat", lib="~/R/win-library/3.5")
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
install.packages('mixtools')
install.packages(c( 'lars', 'dtw', 'doSNOW', 'hdf5r' ))
install.packages(c( 'lars'))
library(BiocInstaller)
BiocManager::install('lars')
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
install.packages("D:/work/Zihan/web/package/Seurat_2.3.4.tar.gz", repos = NULL, type = "source")
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
library("monocle")
shiny::runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
shiny::runApp('D:/work/Zihan/web/web')
24*48
24*24
1.79/12
1.79/1.2
1.5*17
1.5*17 +4.61
120 + 4*36
12 + 1 + 8 + 25+12 + 1+18 + 12  +  18 * 4
12 + 1 + 8 + 25+12 + 1+36 + 24  +  36 * 4
shiny::runApp('D:/work/Zihan/web/web')
24*24
96*6
12+1+8+30+8+1+15+18+12+1
1340+1250+670+1470+1400+450+1400+450
library(ShortRead)
shiny::runApp('E:/硬件相关/A01事务管理/物料整理/idgen')
5315 + 2500 + 2190
10005 * 0.015
10005 * 0.02
5315*0.015
5315*0.015 *3
getwd()
aa <- read.table('mouse_genome.txt',header = T,sep='\t',stringsAsFactors = F)
?read.csv
aa <- read.delim('mouse_genome.txt',header = T,stringsAsFactors = F)
aa <- read.delim('mouse_genome.txt',header = F,stringsAsFactors = F)
aa <- read.delim('mouse_genome1.txt',header = F,stringsAsFactors = F)
install.packages('treemaps')
getwd()
?read.csv
a <- read.delim('read.delim')
a <- read.delim('hESC.txt')
shiny::runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
a = matrix(1:12,3,4)
a
log(a+1)
runApp('D:/work/Zihan/web/web')
source('D:/work/Zihan/web/web/base/data.R')
runApp('D:/work/Zihan/web/web')
runApp('D:/work/Zihan/web/web')
library("shiny")
?withProgress
ls
library("Seurat")
library('monocle')
?setOrderingFilter
?plot_cell_trajectory
{}
?orderCells
install.packages("C:/Users/Administrator/Desktop/aa/apcluster_1.4.8.zip", repos = NULL, type = "win.binary")
library("Seurat")
?RunUMAP
pbmc_small
pbmc_small <- RunUMAP(object = pbmc_small, dims.use = 1:5)
shiny::runApp('D:/work/Zihan/web/web')
aa <- wilcox.test(c(8.417031707951214,8.758327454241885,8.139324998014171 ),c(3.402412228916392,4.5350481978891475,3.670285154881549),paired=F)
aa
aa <- t.test(c(8.417031707951214,8.758327454241885,8.139324998014171 ),c(3.402412228916392,4.5350481978891475,3.670285154881549),paired=F)
aa
?sparse
library("Matrix")
?sparseMatrix
i <- c(1,3:8); j <- c(2,9,6:10); x <- 7 * (1:7)
(A <- sparseMatrix(i, j, x = x))
A
A[1,]
colnames(A) <- paste(1:10)
colnames(A) <- paste('AA',1:10,sep='')
A
A['AA2',]
A[3,]
A[,'AA2']
source('~/permutation.R')
View(input)
source('~/permutation.R')
source('~/permutation.R')
?lm
sample(1,10)
?sample
sample(10)
sample(10)
?lm
debugSource('~/permutation.R')
debugSource('~/permutation.R')
a <- lm.xy$coefficients
View(a)
View(a)
View(Y)
coef.org <- lm.xy[-1,]
coef.org <- lm.xy$coefficients[-1,]
View(a)
View(coef.org)
source('~/permutation.R')
(1:3) > c(3,2,1)
matrix(1:10,2,5) > matrix(1:10,2,5)
matrix(1:10,2,5) > matrix(c(1:5,1:5),2,5)
num <- matrix(0,dim(Y)[2],dim(X)[2])
abs(matrix(1:10,2,5))
source('~/permutation.R')
View(p)
source('~/permutation.R')
View(p)
source('~/permutation.R')
View(p)
shiny::runApp('D:/work/Zihan/web/TIPS')
?pheatmap
library(Rserve)
install.packages("Rserve",,"http://rforge.net")
date
date（）
date()
install.packages('ggcorplot')
install.packages('ggcorrplot')
ggcorrplot
library(ggcorrplot)
ggcorrplot
fn <- fns[5]
dd <- readRDS(fn)
library(ggplot2)
fn_dir <- 'D:\\work\\TCR\\zhangjunying\\data\\add2B4'
fns <- list.files(fn_dir, full.names = T)
summary_t <- sapply(fns, function(fn){
dd     <- readRDS(fn)
count  <- sort(dd$cdr3.org$count,decreasing = T)
refnum <- dd$ref_cell$match_all
idx    <- which(count < refnum)
idx    <- idx[1]
c(maxcount = count[1], ref2B4 = refnum, number=length(count), pos = idx)
})
colnames(summary_t) <- basename(fns)
fn <- fns[5]
dd <- readRDS(fn)
fn <- fns[5]
dd <- readRDS(fn)
dt <- aggregate(value~nt,data=data.frame(nt=dd$cdr3.org$nt,count=dd$cdr3.org$count),FUN="sum")
dt <- aggregate(count~nt,data=data.frame(nt=dd$cdr3.org$nt,count=dd$cdr3.org$count),FUN="sum")
library(ggplot2)
fn_dir <- 'D:\\work\\TCR\\zhangjunying\\data\\add2B4'
fns <- list.files(fn_dir, full.names = T)
summary_t <- sapply(fns, function(fn){
dd     <- readRDS(fn)
count  <- sort(dd$cdr3.org$count,decreasing = T)
refnum <- dd$ref_cell$match_all
idx    <- which(count < refnum)
idx    <- idx[1]
correct_clonotype <- length(dd$cdr3.cell$nt)
c(maxcount = count[1], ref2B4 = refnum, number=length(count), pos = idx,correct_clonotype=correct_clonotype)
})
colnames(summary_t) <- basename(fns)
summary_t
15/24
source('E:/硬件相关/检测相关/filecheck/test_filecheck.R')
setwd("E:/硬件相关/检测相关/filecheck")
source('E:/硬件相关/检测相关/filecheck/test_filecheck.R')
write.csv(fileall, file='all.csv',quote = F)
?write.csv
write.csv(fileall, file='all.csv',quote = F,fileEncoding = 'UTF-8')
?file.path
list.files()
?list.files
?basename
dirall <- unique(dirname(fileall))
fileall[7000]
setwd("D:/work/Zihan/web/TIPS")
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
??readGMT
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
source('D:/work/Zihan/web/TIPS/test.R')
dd <- NormalizeData(object = dd)
?FindVariableGenes
### dimision reduction
dd <- CreateSeuratObject(gdata_expr,meta.data =gdata_phenotype)
dd <- NormalizeData(object = dd)
FindVariableFeatures(dd,selection.method = "vst")
dd <- CreateSeuratObject(gdata_expr,meta.data =gdata_phenotype)
dd <- NormalizeData(object = dd)
dd <- FindVariableFeatures(dd,selection.method = "vst")
dd <- ScaleData(object = dd)
dd <- RunPCA(object = dd)
dd <- RunTSNE(object = dd, genes.use = dd@var.genes, perplexity = input$parm_dimreduce_tSNE_ppl)
dd <- RunUMAP(object = dd, genes.use = dd@var.genes, reduction.use = "umap", n_neighbors = input$parm_dimreduce_umap_kNeighbors)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F, resolution = 1)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F, resolution = 1.2)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F, resolution = 0.6)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F, resolution = 0.4)
?RunTSNE
?RunUMAP
dd <- RunTSNE(object = dd, genes.use = dd@var.genes)
dd <- RunTSNE(object = dd)
dd <- RunUMAP(object = dd)
dd <- RunUMAP(object = dd,dims = 1:5)
dd <- FindClusters(object = dd, reduction.type = "umap", dims.use = 1:2, print.output = F)
?FindClusters
?FindClusters
dd <- FindClusters(object = dd, reduction.type = "umap")
dd <- FindClusters(object = dd)
dd <- FindClusters(object = dd,resolution = 1)
dd <- FindClusters(object = dd,resolution = 1.2)
dd <- FindClusters(object = dd,resolution = 0.6)
dd <- FindClusters(object = dd,resolution = 0.4)
dd <- FindClusters(object = dd)
source('D:/work/Zihan/web/TIPS/test.R')
DimPlot(object = dd,reduction = "umap",label = TRUE)
?DimPlot
DimPlot(object = dd,reduction = "umap", split.by = 'ident')
names(dd)
aa <- dd@reductions
?seurat
student <- setClass("student", slots=list( name="character", age="numeric", GPA="numeric" ) )
student
s <- student(name="Nikita", age=24, GPA=8.5)
s
s@GPA
s@GPA <- 10
s
slot(s,'GPA')
showMethods('Seurat')
showMethods(Seurat)
showMethod('Seurat')
showMethod(Seurat)
showMethod()
show('Seurat')
show(Seurat)
showMethod(show)
showMethod('show')
showMethod(print())
showMethod(print
)
